Request {
  id: 'req-2',
  params: NullObject <[Object: null prototype] {}> {},
  raw: IncomingMessage {
    _events: {
      close: undefined,
      error: undefined,
      data: undefined,
      end: [Function: clearIncoming],
      readable: undefined
    },
    _readableState: ReadableState {
      highWaterMark: 16384,
      buffer: [],
      bufferIndex: 0,
      length: 0,
      pipes: [],
      awaitDrainWriters: null,
      [Symbol(kState)]: 60036988
    },
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _events: [Object],
      _readableState: [ReadableState],
      _writableState: [WritableState],
      allowHalfOpen: true,
      _maxListeners: undefined,
      _eventsCount: 8,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: null,
      _peername: [Object],
      timeout: 73000,
      [Symbol(async_id_symbol)]: 478,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 73000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 164651,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 488,
        [Symbol(triggerId)]: 484
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    rawHeaders: [
      'host',
      'auth-service:3001',
      'connection',
      'keep-alive',
      'Authorization',
      'Bearer [object Object]',
      'accept',
      '*/*',
      'accept-language',
      '*',
      'sec-fetch-mode',
      'cors',
      'user-agent',
      'node',
      'accept-encoding',
      'gzip, deflate',
      'content-length',
      '0'
    ],
    rawTrailers: [],
    joinDuplicateHeaders: null,
    aborted: false,
    upgrade: false,
    url: '/auth/verify-token',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _events: [Object],
      _readableState: [ReadableState],
      _writableState: [WritableState],
      allowHalfOpen: true,
      _maxListeners: undefined,
      _eventsCount: 8,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: null,
      _peername: [Object],
      timeout: 73000,
      [Symbol(async_id_symbol)]: 478,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 73000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 164651,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 488,
        [Symbol(triggerId)]: 484
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: false,
    _dumped: true,
    _eventsCount: 1,
    [Symbol(shapeMode)]: false,
    [Symbol(kCapture)]: false,
    [Symbol(kHeaders)]: {
      host: 'auth-service:3001',
      connection: 'keep-alive',
      authorization: 'Bearer [object Object]',
      accept: '*/*',
      'accept-language': '*',
      'sec-fetch-mode': 'cors',
      'user-agent': 'node',
      'accept-encoding': 'gzip, deflate',
      'content-length': '0'
    },
    [Symbol(kHeadersCount)]: 18,
    [Symbol(kTrailers)]: null,
    [Symbol(kTrailersCount)]: 0
  },
  query: {},
  log: EventEmitter {
    trace: [Function: noop],
    debug: [Function: noop],
    info: [Function: LOG],
    warn: [Function: LOG],
    error: [Function: LOG],
    fatal: [Function (anonymous)],
    [Symbol(pino.serializers)]: {
      err: [Function: errSerializer],
      req: [Function: asReqValue],
      res: [Function: asResValue]
    },
    [Symbol(pino.formatters)]: {
      level: [Function: level],
      bindings: [Function: resetChildingsFormatter],
      log: undefined
    },
    [Symbol(pino.chindings)]: ',"pid":30,"hostname":"7be7e2618930","reqId":"req-2"',
    [Symbol(pino.levelVal)]: 30,
    [Symbol(fastify.disableRequestLogging)]: false
  },
  body: undefined,
  [Symbol(fastify.context)]: Context {
    schema: {
      tags: [Array],
      summary: 'Verify access token',
      description: 'Validates JWT token for other microservices',
      headers: [Object],
      response: [Object],
      [Symbol(fastify.schemas.visited)]: true
    },
    handler: [Function: bound ] AsyncFunction,
    Reply: [Function: Reply] {
      props: [],
      buildReply: [Function: buildReply],
      setupResponseListeners: [Function: setupResponseListeners]
    },
    Request: [Function: Request] {
      props: [],
      buildRequest: [Function: buildRequest]
    },
    contentTypeParser: ContentTypeParser {
      customParsers: [Map],
      parserList: [Array],
      parserRegExpList: [],
      cache: [FifoMap],
      [Symbol(fastify.defaultJSONParse)]: [Function: defaultJsonParser]
    },
    onRequest: null,
    onSend: null,
    onError: null,
    onTimeout: null,
    preHandler: null,
    onResponse: null,
    preSerialization: null,
    onRequestAbort: null,
    config: { url: '/auth/verify-token', method: 'POST' },
    errorHandler: { func: [Function: bound ] },
    requestIdLogLabel: 'reqId',
    childLoggerFactory: [Function: defaultChildLoggerFactory],
    _middie: null,
    _parserOptions: { limit: null },
    exposeHeadRoute: true,
    prefixTrailingSlash: 'both',
    logLevel: '',
    logSerializers: undefined,
    attachValidation: false,
    schemaErrorFormatter: [Function: defaultSchemaErrorFormatter],
    validatorCompiler: null,
    serializerCompiler: null,
    server: <ref *1> {
      routing: [Function: preRouting],
      delete: [Function: _delete],
      get: [Function: _get],
      head: [Function: _head],
      trace: [Function: _trace],
      patch: [Function: _patch],
      post: [Function: _post],
      put: [Function: _put],
      options: [Function: _options],
      all: [Function: _all],
      route: [Function: _route],
      hasRoute: [Function: _route],
      findRoute: [Function: _findRoute],
      log: [EventEmitter],
      withTypeProvider: [Function: withTypeProvider],
      addHook: [Function: addHook],
      addSchema: [Function: addSchema],
      getSchema: [Function: bound getSchema],
      getSchemas: [Function: bound getSchemas],
      setValidatorCompiler: [Function: setValidatorCompiler],
      setSerializerCompiler: [Function: setSerializerCompiler],
      setSchemaController: [Function: setSchemaController],
      setReplySerializer: [Function: setReplySerializer],
      setSchemaErrorFormatter: [Function: setSchemaErrorFormatter],
      setGenReqId: [Function: setGenReqId],
      addContentTypeParser: [Function: addContentTypeParser],
      hasContentTypeParser: [Function: hasContentTypeParser],
      getDefaultJsonParser: [Function: getDefaultJsonParser],
      defaultTextParser: [Function: defaultPlainTextParser],
      removeContentTypeParser: [Function: removeContentTypeParser],
      removeAllContentTypeParsers: [Function: removeAllContentTypeParsers],
      register: [Function (anonymous)],
      after: [Function (anonymous)],
      ready: [Function: ready],
      onClose: [Function (anonymous)],
      close: [Function (anonymous)],
      printPlugins: [Function: bound ],
      hasPlugin: [Function: hasPlugin],
      listen: [Function: listen],
      server: [Server],
      addresses: [Function: addresses],
      decorate: [Function: decorateFastify],
      hasDecorator: [Function: checkExistence],
      decorateReply: [Function: decorateReply],
      decorateRequest: [Function: decorateRequest],
      hasRequestDecorator: [Function: checkRequestExistence],
      hasReplyDecorator: [Function: checkReplyExistence],
      getDecorator: [Function: getInstanceDecorator],
      addHttpMethod: [Function: addHttpMethod],
      inject: [Function: inject],
      printRoutes: [Function: printRoutes],
      setNotFoundHandler: [Function: setNotFoundHandler],
      setErrorHandler: [Function: setErrorHandler],
      setChildLoggerFactory: [Function: setChildLoggerFactory],
      initialConfig: [Object],
      addConstraintStrategy: [Function: bound addConstraintStrategy],
      hasConstraintStrategy: [Function: bound hasConstraintStrategy],
      models: [Object],
      errors: [Object],
      authenticate: [AsyncFunction (anonymous)],
      swagger: [Function (anonymous)],
      swaggerCSP: [Object],
      [Symbol(fastify.state)]: [Object],
      [Symbol(fastify.keepAliveConnections)]: [Object],
      [Symbol(fastify.acceptedHTTPMethods)]: [Object],
      [Symbol(fastify.options)]: [Object],
      [Symbol(fastify.children)]: [Array],
      [Symbol(fastify.serverBindings)]: [],
      [Symbol(fastify.bodyLimit)]: 1048576,
      [Symbol(fastify.routePrefix)]: '',
      [Symbol(fastify.logLevel)]: '',
      [Symbol(fastify.logSerializers)]: null,
      [Symbol(fastify.hooks)]: [Hooks <Complex prototype>],
      [Symbol(fastify.schemaController)]: [SchemaController],
      [Symbol(fastify.schemaErrorFormatter)]: null,
      [Symbol(fastify.errorHandler)]: [Object],
      [Symbol(fastify.errorHandlerAlreadySet)]: true,
      [Symbol(fastify.childLoggerFactory)]: [Function: defaultChildLoggerFactory],
      [Symbol(fastify.replySerializerDefault)]: null,
      [Symbol(fastify.contentTypeParser)]: [ContentTypeParser],
      [Symbol(fastify.Reply)]: [Function],
      [Symbol(fastify.Request)]: [Function],
      [Symbol(fastify.404)]: [Object],
      [Symbol(registered-plugin)]: [Array],
      [Symbol(fastify.pluginNameChain)]: [Array],
      [Symbol(fastify.avvioBoot)]: [Function (anonymous)],
      [Symbol(fastify.genReqId)]: [Function: defaultGenReqId],
      [Symbol(avvio.Boot)]: true,
      [Symbol(fastify.canSetNotFoundHandler)]: true,
      [Symbol(fastify.404ContextKey)]: [Context],
      [Symbol(fastify.404LogLevelInstance)]: [Circular *1],
      [Symbol(nodejs.asyncDispose)]: [Function: dispose]
    },
    preParsing: null,
    preValidation: null,
    [Symbol(fastify.404ContextKey)]: {
      schema: undefined,
      handler: [Function: basic404],
      Reply: [Function],
      Request: [Function],
      contentTypeParser: [ContentTypeParser],
      onRequest: null,
      onSend: null,
      onError: null,
      onTimeout: null,
      preHandler: null,
      onResponse: null,
      preSerialization: null,
      onRequestAbort: null,
      config: {},
      errorHandler: [Object],
      requestIdLogLabel: 'reqId',
      childLoggerFactory: [Function: defaultChildLoggerFactory],
      _middie: null,
      _parserOptions: [Object],
      exposeHeadRoute: undefined,
      prefixTrailingSlash: undefined,
      logLevel: '',
      logSerializers: undefined,
      attachValidation: undefined,
      schemaErrorFormatter: [Function: defaultSchemaErrorFormatter],
      validatorCompiler: null,
      serializerCompiler: null,
      server: [Object],
      preParsing: null,
      preValidation: null,
      [Symbol(fastify.404ContextKey)]: null,
      [Symbol(fastify.replySerializerDefault)]: undefined,
      [Symbol(fastify.routeByFastify)]: undefined,
      [Symbol(fastify.request.cache.validateFns)]: null,
      [Symbol(fastify.reply.cache.serializeFns)]: null
    },
    [Symbol(fastify.replySerializerDefault)]: null,
    [Symbol(fastify.routeByFastify)]: false,
    [Symbol(fastify.request.cache.validateFns)]: null,
    [Symbol(fastify.reply.cache.serializeFns)]: null,
    [Symbol(headers-schema)]: [Function: validate14] {
      errors: null,
      schema: [Object],
      schemaEnv: [SchemaEnv]
    },
    [Symbol(response-schema)]: { '200': [Function: anonymous0] }
  },
  [Symbol(fastify.RequestPayloadStream)]: IncomingMessage {
    _events: {
      close: undefined,
      error: undefined,
      data: undefined,
      end: [Function: clearIncoming],
      readable: undefined
    },
    _readableState: ReadableState {
      highWaterMark: 16384,
      buffer: [],
      bufferIndex: 0,
      length: 0,
      pipes: [],
      awaitDrainWriters: null,
      [Symbol(kState)]: 60036988
    },
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _events: [Object],
      _readableState: [ReadableState],
      _writableState: [WritableState],
      allowHalfOpen: true,
      _maxListeners: undefined,
      _eventsCount: 8,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: null,
      _peername: [Object],
      timeout: 73000,
      [Symbol(async_id_symbol)]: 478,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 73000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 164651,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 488,
        [Symbol(triggerId)]: 484
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    rawHeaders: [
      'host',
      'auth-service:3001',
      'connection',
      'keep-alive',
      'Authorization',
      'Bearer [object Object]',
      'accept',
      '*/*',
      'accept-language',
      '*',
      'sec-fetch-mode',
      'cors',
      'user-agent',
      'node',
      'accept-encoding',
      'gzip, deflate',
      'content-length',
      '0'
    ],
    rawTrailers: [],
    joinDuplicateHeaders: null,
    aborted: false,
    upgrade: false,
    url: '/auth/verify-token',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _events: [Object],
      _readableState: [ReadableState],
      _writableState: [WritableState],
      allowHalfOpen: true,
      _maxListeners: undefined,
      _eventsCount: 8,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: null,
      _peername: [Object],
      timeout: 73000,
      [Symbol(async_id_symbol)]: 478,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 73000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 164651,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 488,
        [Symbol(triggerId)]: 484
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: false,
    _dumped: true,
    _eventsCount: 1,
    [Symbol(shapeMode)]: false,
    [Symbol(kCapture)]: false,
    [Symbol(kHeaders)]: {
      host: 'auth-service:3001',
      connection: 'keep-alive',
      authorization: 'Bearer [object Object]',
      accept: '*/*',
      'accept-language': '*',
      'sec-fetch-mode': 'cors',
      'user-agent': 'node',
      'accept-encoding': 'gzip, deflate',
      'content-length': '0'
    },
    [Symbol(kHeadersCount)]: 18,
    [Symbol(kTrailers)]: null,
    [Symbol(kTrailersCount)]: 0
  }
}

