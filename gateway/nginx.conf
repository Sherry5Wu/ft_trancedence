events {}

http {

  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  upstream stats_service {
    server stats-service:3001;
  }
  upstream tournament_service {
    server tournament-service:3001;
  }
  upstream auth_service {
    server auth-service:3001;
  }
  upstream frontend_service {
    server frontend-service:9000;
  }

  server {
    listen 8443 ssl;

    ssl_certificate     /etc/nginx/ssl/nginx.crt;
    ssl_certificate_key /etc/nginx/ssl/nginx.key;
    ssl_protocols       TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    location / {
      proxy_pass http://frontend_service/;

      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;

      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_read_timeout 3600s;
      proxy_send_timeout 3600s;
    }

    location /stats/ {
      proxy_pass http://stats_service/;
    }

    location /tournament/ {
      proxy_pass http://tournament_service/;
    }

    location /as/ {
      proxy_pass http://auth_service/;
    }

    location /uploads/avatars/ {
      # Forward to the auth service (container service name and internal port)
      proxy_pass http://auth-service:3001/uploads/avatars/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_http_version 1.1;
      proxy_buffering off;
    }
  }
}
