services:
  stats-service:
    build: 
      context: ./services/stats-service
    env_file: "./.env"
    volumes:
      - stats_data:/app/data
    networks:
      - trancendence-network
    restart: unless-stopped

  # Tournament Service
  tournament-service:
    build: 
      context: ./services/tournament-service
    env_file: "./.env"
    volumes:
      - tournament_data:/app/data
    networks:
      - trancendence-network
    restart: unless-stopped
  
  gateway-service:
    build:
      context: ./gateway
    env_file: "./.env"
    depends_on:
      - stats-service
      - tournament-service
      - auth-service
    ports:
      - "8443:8443"
    networks:
      - trancendence-network
    restart: unless-stopped

  auth-service:
    build:
      context: ./services/auth-service
      target: dev  # Use development stage for testing
    env_file: "./services/auth-service/.env"
    networks:
      - trancendence-network
    restart: unless-stopped
    volumes:
      - auth_data:/app/data

  frontend-service:
    build:
      context: ./frontend
    networks:
      - trancendence-network
    restart: unless-stopped
    volumes:
      - ./frontend/:/app/

volumes:
  stats_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/services/stats-service/data
  tournament_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/services/tournament-service/data
  auth_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/services/auth-service/data
  
networks:
  trancendence-network:
    name: trancendence-network
    driver: bridge

